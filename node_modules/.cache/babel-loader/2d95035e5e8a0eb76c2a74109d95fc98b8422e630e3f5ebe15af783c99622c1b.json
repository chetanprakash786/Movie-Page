{"ast":null,"code":"var _jsxFileName = \"/Users/chetanprakash/Desktop/CP/my-first_resct_app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport MovieCard from './MovieCard';\nimport './App.css';\nimport SearchIcon from './search.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://www.omdbapi.com?apikey=6dc2a846';\nconst movie1 = {\n  \"Title\": \"Spiderman and Grandma\",\n  \"Year\": \"2009\",\n  \"imdbID\": \"tt1433184\",\n  \"Type\": \"movie\",\n  \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMjE3Mzg0MjAxMl5BMl5BanBnXkFtZTcwNjIyODg5Mg@@._V1_SX300.jpg\"\n};\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n  };\n  useEffect(() => {\n    searchMovies('Spiderman');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieLand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search for movies\",\n        value: \"Superman\",\n        onChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie1: movies[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","MovieCard","SearchIcon","jsxDEV","_jsxDEV","API_URL","movie1","App","_s","movies","setMovies","searchMovies","title","response","fetch","data","json","Search","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/chetanprakash/Desktop/CP/my-first_resct_app/src/App.js"],"sourcesContent":["import{useState, useEffect} from 'react';\n import MovieCard from './MovieCard';\n import './App.css';\n import SearchIcon from './search.svg';\n\nconst API_URL ='http://www.omdbapi.com?apikey=6dc2a846';\nconst movie1 = {\n        \"Title\": \"Spiderman and Grandma\",\n        \"Year\": \"2009\",\n        \"imdbID\": \"tt1433184\",\n        \"Type\": \"movie\",\n        \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMjE3Mzg0MjAxMl5BMl5BanBnXkFtZTcwNjIyODg5Mg@@._V1_SX300.jpg\"\n    }\n \n\nconst App = () => {\n\n    const [movies, setMovies] = useState([]);\n\n    const searchMovies = async (title) => {\n        const response = await fetch(`${API_URL}&s=${title}`);\n        const data = await response.json();\n       setMovies(data.Search);\n    }\n    useEffect(() => {\n      searchMovies('Spiderman');\n              \n    },[]);\n    return (\n        <div className =\"app\">\n           <h1>MovieLand</h1>\n           <div className=\"search\">\n            <input\n            placeholder= \"Search for movies\"\n            value =\"Superman\"\n            onChange={() =>{}}\n            />\n\n            <img\n            src={SearchIcon}\n            alt =\"search\"\n            onClick ={()=>{}}\n            />\n           </div>\n           \n           <div className =\"container\">\n            <MovieCard movie1 ={movies[0]}/>\n           </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,SAAOA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,GAAE,wCAAwC;AACvD,MAAMC,MAAM,GAAG;EACP,OAAO,EAAE,uBAAuB;EAChC,MAAM,EAAE,MAAM;EACd,QAAQ,EAAE,WAAW;EACrB,MAAM,EAAE,OAAO;EACf,QAAQ,EAAE;AACd,CAAC;AAGL,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,MAAKO,KAAM,EAAC,CAAC;IACrD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACnCN,SAAS,CAACK,IAAI,CAACE,MAAM,CAAC;EACzB,CAAC;EACDjB,SAAS,CAAC,MAAM;IACdW,YAAY,CAAC,WAAW,CAAC;EAE3B,CAAC,EAAC,EAAE,CAAC;EACL,oBACIP,OAAA;IAAKc,SAAS,EAAE,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACtBf,OAAA;QACAoB,WAAW,EAAE,mBAAmB;QAChCC,KAAK,EAAE,UAAU;QACjBC,QAAQ,EAAEA,CAAA,KAAK,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eAEFnB,OAAA;QACAuB,GAAG,EAAEzB,UAAW;QAChB0B,GAAG,EAAE,QAAQ;QACbC,OAAO,EAAGA,CAAA,KAAI,CAAC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENnB,OAAA;MAAKc,SAAS,EAAE,WAAW;MAAAC,QAAA,eAC1Bf,OAAA,CAACH,SAAS;QAACK,MAAM,EAAGG,MAAM,CAAC,CAAC;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAAf,EAAA,CAnCKD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}